version: '2.2'

volumes:
  feedbin_redis:
  feedbin_db:
  feedbin_elasticsearch:
  feedbin_minio:
  feedbin_caddy:

services:

  feedbin-caddy:
    image: abiosoft/caddy:1.0.3
    volumes:
      - feedbin_caddy:/etc/ssl/caddy
      - ./caddy/Caddyfile:/etc/Caddyfile:ro
    env_file:
      - ./.env
    ports:
      - 80:80
      - 443:443
      - 2015:2015
    restart: always

  feedbin-minio:
    image: minio/minio
    volumes:
      - feedbin_minio:/data
    env_file:
      - ./.env
    command: server /data
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:9000/minio/health/live"]
    restart: always

  feedbin-minio-create:
    image: minio/mc
    depends_on:
      - feedbin-minio
    env_file:
      - ./.env
    entrypoint: >
      /bin/sh -c "
      sleep 5;
      /usr/bin/mc config host add minio http://feedbin-minio:9000  ${MINIO_ACCESS_KEY}  ${MINIO_SECRET_KEY};
      /usr/bin/mc mb minio/${MINIO_BUCKET};
      /usr/bin/mc policy set download minio/${MINIO_BUCKET};
      exit 0;
      "

  feedbin-web:
    build:
      context: .
      args:
        FEEDBIN_URL: ${FEEDBIN_URL}
    depends_on:
      - feedbin-postgres
    env_file:
      - ./.env
    environment:
      PORT: 3000
      DATABASE_URL: postgres://${POSTGRES_USER}:${POSTGRES_PASSWORD}@${P      OSTGRES_HOST}/${POSTGRES_DB_NAME}
      AWS_ACCESS_KEY_ID: ${MINIO_ACCESS_KEY}
      AWS_SECRET_ACCESS_KEY: ${MINIO_SECRET_KEY}
      AWS_S3_BUCKET: ${MINIO_BUCKET}
      AWS_S3_BUCKET_FAVICONS: ${MINIO_BUCKET}
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:3000"]
    command: bundle exec rails s --port 3000 --binding 0.0.0.0
    restart: always
    mem_limit: 512m

  feedbin-workers:
    build: .
    env_file:
     - ./.env
    environment:
      DATABASE_URL: postgres://${POSTGRES_USER}:${POSTGRES_PASSWORD}@${POSTGRES_HOST}/${POSTGRES_DB_NAME}
    command: foreman start
    restart: always
    mem_limit: 512m

  feedbin-elasticsearch:
    image: elasticsearch:2.4
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:9200"]
    volumes:
      - feedbin_elasticsearch:/usr/share/elasticsearch/data
    environment:
      - bootstrap.memory_lock=true
      - "ES_JAVA_OPTS=-Xms512m -Xmx512m"
      - discovery.type=single-node
    ulimits:
      memlock:
        soft: -1
        hard: -1
    mem_limit: 1g
    restart: always

  feedbin-refresher:
    build: ./feedbin-refresher
    env_file:
     - ./.env
    restart: always
    mem_limit: 512m

  feedbin-image:
    build: ./feedbin-image
    env_file:
      - ./.env
    restart: always
    mem_limit: 512m

  camo:
    image: increments/camo
    environment:
      - PORT=8081
    env_file:
     - ./.env
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8081"]
    restart: always

  feedbin-memcached:
    image: memcached:1.5
    restart: always

  feedbin-redis:
    image: redis:5
    command: "redis-server --appendonly yes"
    volumes:
      - feedbin_redis:/data
    restart: always

  feedbin-postgres:
    image: postgres:13
    env_file:
     - ./.env
    volumes:
      - feedbin_db:/var/lib/postgresql/data
    restart: always
    mem_limit: 512m

  feedbin-extract:
    build:
      context: ./feedbin-extract
      args:
        EXTRACT_USER: ${EXTRACT_USER}
        EXTRACT_SECRET: ${EXTRACT_SECRET}
    env_file:
      - ./.env
    restart: always
    mem_limit: 512m
